
-- = LISTAR TODO
DELIMITER //
CREATE PROCEDURE PROC_CONSULTA_LIST()
BEGIN
    -- Puedes definir parámetros si es necesario
    -- DECLARE parametro INT;

    -- Inicio del procedimiento
    SELECT
        C.ID_CONSULTA,
        T.ID_TRABAJADOR,
        T.NOMBRES AS DOCTORA,
        CL.ID_CLIENTE,
        CL.NOMBRES AS NOMBRE_CLIENTE,
        CL.APPATERNO,
        CL.APMATERNO,
        PR.ID_PROCEDIMIENTO,
        PR.NOM_PROCEDIMIENTO,
        C.OBSERVACION,
        TP.ID_TIPO_PAGO,
        TP.DESCRIPCION AS TIPO_PAGO,
        PR.PRECIO,
        C.FECHA AS "FECHA_CONSULTA",
        C.ESTADO
    FROM
        CONSULTA C
    INNER JOIN TRABAJADOR T ON C.ID_TRABAJADOR = T.ID_TRABAJADOR
    INNER JOIN CLIENTE CL ON C.ID_CLIENTE = CL.ID_CLIENTE
    INNER JOIN PROCEDIMIENTO PR ON C.ID_PROCEDIMIENTO = PR.ID_PROCEDIMIENTO
    INNER JOIN TIPO_PAGO TP ON C.ID_TIPO_PAGO = TP.ID_TIPO_PAGO
        ORDER BY C.ID_CONSULTA ASC; -- Ordenar por ID_CONSULTA ascendente


    -- Puedes realizar más operaciones dentro del procedimiento si es necesario

END //

DELIMITER ;




DELIMITER $$

CREATE PROCEDURE PROC_CONSULTA_CU(
    IN _ID_CONSULTA INT,
    IN _OBSERVACION VARCHAR(255),
    IN _FECHA DATE,
    IN _ID_TRABAJADOR INT,
    IN _ID_CLIENTE INT,
    IN _ID_PROCEDIMIENTO INT,
    IN _ID_TIPO_PAGO INT
)
BEGIN
    DECLARE __ICON VARCHAR(10) DEFAULT 'error';
    DECLARE __MESSAGE_TEXT VARCHAR(300) DEFAULT 'HA OCURRIDO UN ERROR';
    DECLARE __STATUS_CODE CHAR(3) DEFAULT '501';
    
    IF _ID_CONSULTA = 0 THEN
        -- Crear nueva consulta
        INSERT INTO consulta (OBSERVACION, FECHA, ID_TRABAJADOR, ID_CLIENTE, ID_PROCEDIMIENTO, ID_TIPO_PAGO, ESTADO) 
        VALUES (_OBSERVACION, _FECHA, _ID_TRABAJADOR, _ID_CLIENTE, _ID_PROCEDIMIENTO, _ID_TIPO_PAGO, '1');
        
        SET __ICON = 'success';
        SET __MESSAGE_TEXT = 'Consulta creada exitosamente';
        SET __STATUS_CODE = '201';
    ELSE
        -- Actualizar consulta existente
        UPDATE consulta 
        SET 
            OBSERVACION = _OBSERVACION,
            FECHA = _FECHA,
            ID_TRABAJADOR = _ID_TRABAJADOR,
            ID_CLIENTE = _ID_CLIENTE,
            ID_PROCEDIMIENTO = _ID_PROCEDIMIENTO,
            ID_TIPO_PAGO = _ID_TIPO_PAGO
        WHERE ID_CONSULTA = _ID_CONSULTA;
        
        SET __ICON = 'success';
        SET __MESSAGE_TEXT = 'Consulta actualizada exitosamente';
        SET __STATUS_CODE = '202';
    END IF;
    
    SELECT __ICON AS 'ICON', __MESSAGE_TEXT AS 'MESSAGE_TEXT', __STATUS_CODE AS 'STATUS_CODE';
END $$

DELIMITER ;



-- = ELIMINAR CONSULTA
DELIMITER $$
CREATE PROCEDURE PROC_CONSULTA_DELETE(
    _ID_CONSULTA INT
) BEGIN
    -- MENSAJES A LA INTERFAZ
    DECLARE __ICON VARCHAR(10) DEFAULT 'error';
    DECLARE __MESSAGE_TEXT VARCHAR(300) DEFAULT 'HA OCURRIDO UN ERROR';
    DECLARE __STATUS_CODE CHAR(3) DEFAULT '501';

    -- SABER SI NO SE ENCUENTRA O YA ESTA ELIMINADO
    DECLARE __NO_EXISTS INT DEFAULT 0;

    SELECT IF(ESTADO <> 0, ID_CONSULTA , 0) INTO __NO_EXISTS FROM CONSULTA
    WHERE ID_CONSULTA  = _ID_CONSULTA ;

    IF __NO_EXISTS = 0 THEN 
        -- MENSAJE
        SET __ICON = 'warning';
        SET __MESSAGE_TEXT = 'EL ELEMENTO NO EXISTE O YA HA SIDO ELIMINADO';
        SET __STATUS_CODE = '200';
    ELSE
        UPDATE CONSULTA
            SET ESTADO = '0'
            WHERE ID_CONSULTA  = _ID_CONSULTA ;
        -- MENSAJE
            SET __ICON = 'success';
            SET __MESSAGE_TEXT = 'ELEMENTO ELIMINADO';
            SET __STATUS_CODE = '202';
    END IF;
    SELECT __ICON AS 'ICON', __MESSAGE_TEXT AS 'MESSAGE_TEXT', __STATUS_CODE AS 'STATUS_CODE';
END $$
DELIMITER ;